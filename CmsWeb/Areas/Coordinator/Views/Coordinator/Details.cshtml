@model CmsWeb.Areas.Coordinator.Models.CheckinScheduleDto

<div class="form-group">
    <div id="SubgroupDataContainer">
        <div class="box box-primary">
            <div class="box-title">
                <p class="title">@Model.NextMeetingDate | @Model.OrganizationName - @Model.SubgroupName</p>
            </div>
            <div class="box-content">
                @Html.HiddenFor(m => m.SubgroupId)
                @Html.HiddenFor(m => m.OrganizationId)
                @Html.HiddenFor(m => m.SubgroupName)
                @Html.HiddenFor(m => m.NextMeetingDate)
              
                <div style="display: grid; justify-items: center; align-items: center; grid-template-columns: 25% 25% 25% 25%;">
                    <div class="metric">
                        <h3 class="metric-title">Members</h3>
                        <div class="metric-value circle">@Model.AttendeeMemberCount</div>
                    </div>
                    <div class="metric">
                        <h3 class="metric-title">Volunteers</h3>
                        <div class="metric-value circle">@Model.AttendeeWorkerCount</div>
                    </div>
                    <div class="metric">
                        <div class="metric-value">
                            <h3 class="metric-title">Capacity</h3>
                            <div class="circle">@Model.CheckInCapacity</div>

                            <div>
                                <a id="remove" class="btn" href=""><i class="fa fa-minus-circle fa-2x"></i></a>
                                <a id="add" class="btn" href="#"><i class="fa fa-plus-circle fa-2x"></i></a>
                            </div>
                        </div>
                    </div>
                    <div class="metric">
                        <h3 class="metric-title">Open</h3>
                        <div class="metric-value">
                            @if (@Model.CheckInOpen)
                            {
                                <i class="fa fa-toggle-on fa-3x active" id="on"></i>
                                <i class="fa fa-toggle-on fa-3x fa-rotate-180 inactive" id="off" style="display: none;"></i>
                            }
                            else
                            {
                                <i class="fa fa-toggle-on fa-3x active" id="on" style="display: none;"></i>
                                <i class="fa fa-toggle-on fa-3x fa-rotate-180 inactive" id="off"></i>
                            }
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="volunteers" class="table">
                        <thead>
                            <tr style="background: gainsboro;">
                                <th style="text-align: center">Volunteers</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var attendee in Model.Attendees.Where(a => a.IsWorker))
                            {
                                <tr>
                                    <td style="padding: 0 !important;border: 0 !important; min-width: 225px; line-height: 5">
                                        <label class="labelnothighlighted"><input style="width: 20px; height: 15px" class="checkSingle" type="checkbox" value="@attendee.PeopleId">@attendee.Name</label>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <table id="members" class="table">
                        <thead>
                            <tr style="background: gainsboro;">
                                <th style="text-align: center">Attendees</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var attendee in Model.Attendees.Where(a => !a.IsWorker))
                            {
                                <tr>
                                    <td style="padding: 0 !important;border: 0 !important; min-width: 225px; line-height: 5">
                                        <label class="labelnothighlighted"><input style="width: 20px; height: 15px" class="checkSingle" type="checkbox" value="@attendee.PeopleId">@attendee.Name</label>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="form-group">
                        <input style="width: 100%; height: 50px; background: #003f72; color: white; font-weight: bolder; text-align: center; line-height: 3" type="button" id="movebtn" class="btn btn-primary" value="NEXT">
                    </div>
                    <input type="hidden" id="hiddenlist" />
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    function apiExecuteAction(params) {
        $.ajax({
            url: '/Coordinator/Coordinator/ExecuteAction',
            data: JSON.stringify(params),
            success: function (ret) {
                $('#SubgroupDataContainer').html(ret);
            },
            error: function (ret) {
                swal('Error!', ret, 'error');
            },
            type: 'POST',
            contentType: 'application/json, charset=utf-8',
            dataType: 'html'
        });
    }

    function buildParameters(item, action) {
        return {
            organizationId: $("#OrganizationId").val(),
            subgroupId: $("#SubgroupId").val(),
            subgroupName: $("SubgroupName").val(),
            selectedTimeslot: $("SelectedTimeslot").val(),
            action: action
        };
    }

    $('.middle').click(function() {
        $('.inactive, .active').toggle();
    });

    $('#on').on('click',
        function(e) {
            e.preventDefault();

            var params = buildParameters($(this), "ToggleCheckinOpen");
            apiExecuteAction(params);
        });

    $('#off').on('click',
        function(e) {
            e.preventDefault();

            var params = buildParameters($(this), "ToggleCheckinOpen");
            apiExecuteAction(params);
        });

    $('.checkSingle').on('click', function () {
        if ($(this).is(':checked')) {
            $(this).parent().removeClass('labelnothighlighted');
            $(this).parent().addClass('labelhighlighted');
        } else {
            $(this).parent().removeClass('labelhighlighted');
            $(this).parent().addClass('labelnothighlighted');
        }
    });

    $('#add').on('click',
        function (e) {
            e.preventDefault();

            var params = buildParameters($(this), "IncrementCapacity");
            apiExecuteAction(params);
        });

    $('#remove').on('click',
        function (e) {
            e.preventDefault();

            var params = buildParameters($(this), "DecrementCapacity");
            apiExecuteAction(params);
        });

    $('#movebtn').on('click',
        function () {
            var list = [];
            $('input:checked').each(function () {
                if (typeof $(this).val() != 'undefined') {
                    list.push($(this).val());
                }
            });
            if (list.length === 0)
                return;

            var temp = list.toString();
            var url = '@Html.Raw(Url.Action("MoveSubgroupView", "Coordinator", new {id="-1", grpid ="-2", list="-3" }))';
            url = url.replace("-1", $('#OrganizationId').val());
            url = url.replace("-2", $('#SubgroupId').val());
            url = url.replace("-3", temp);
            window.location.replace(url);
        });
</script>

