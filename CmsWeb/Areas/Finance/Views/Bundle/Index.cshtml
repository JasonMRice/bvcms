@model CmsWeb.Areas.Finance.Models.BundleModel
@using CmsData
@using CmsWeb
@using UtilityExtensions
@{
    ViewBag.Title = "Contribution Bundle";
    ViewBag.PageHeader = $"Contribution Bundle #{Model.BundleId}";
    Layout = ViewExtensions2.TouchPointLayout();
}
@if ((bool?)TempData["createbundle"] == true)
{
    @Html.Partial("Create", Model)
}
else if ((bool?)TempData["editbundle"] == true)
{
    @Html.Partial("Edit", Model)
}
else
{
    @Html.Partial("Display", Model)
}
@section scripts
{
    <script type="text/javascript">
        $(function() {
            $('body').on('click', '#delete', function(ev) {
                ev.preventDefault();
                var href = $(this).attr("href");

                swal({
                        title: "Are you sure?",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: "btn-danger",
                        confirmButtonText: "Yes, delete it!",
                        closeOnConfirm: false
                    },
                    function() {
                        $.post(href, null, function(ret) {
                            if (ret && ret.error)
                                swal("Error!", ret.error, "error");
                            else {
                                swal({
                                        title: "Deleted!",
                                        type: "success"
                                    },
                                    function() {
                                        window.location = ret;
                                    });
                            }
                        });
                    });
                return true;
            });

            $('body').on('click', 'a.displayedit', function(ev) {
                ev.preventDefault();
                var f = $(this).closest('form');
                f.validate();
                if (f.valid()) {
                    var q = f.serialize();
                    $.post($(this).attr('href'), q, function(ret) {
                        window.location = window.location;
                    });
                }
                return false;
            });

            $('body').on('change', '#Status', function() {
                if ($('#Status').val() == 'Open') {
                    $('#IsOpen').val('True');
                } else {
                    $('#IsOpen').val('False');
                }
            });

            $.validator.setDefaults({
                highlight: function(input) {
                    $(input).addClass("ui-state-highlight");
                },
                unhighlight: function(input) {
                    $(input).removeClass("ui-state-highlight");
                }
            });

            $.SetValidation = function() {
                var extraSmallDevice = $('.device-xs').is(':visible');
                var smallDevice = $('.device-sm').is(':visible');
                if (extraSmallDevice || smallDevice) {
                    $("#bundleform").validate({
                        rules: {
                            "Bundle.ContributionDate": { required: true },
                            "Bundle.TotalCash": { number: true },
                            "Bundle.TotalChecks": { number: true },
                            "Bundle.TotalEnvelopes": { number: true },
                        }
                    });
                } else {
                    $("#bundleform").validate({
                        rules: {
                            "Bundle.ContributionDate": { date: true, required: true },
                            "Bundle.DepositDate": { date: true },
                            "Bundle.TotalCash": { number: true },
                            "Bundle.TotalChecks": { number: true },
                            "Bundle.TotalEnvelopes": { number: true },
                        }
                    });
                }

            };

            $.SetValidation();

            function downloadFailed() {
                error_swal('Download failed', 'There was a problem generating the file.  Please contact support to resolve this issue.');
            }

            $('a.remotedeposit').click(function (event) {
                event.preventDefault();
                $.block();
                var href = event.target.href;
                var request = new XMLHttpRequest();
                request.open("GET", href, true);
                request.responseType = "arraybuffer";

                request.onload = function () {
                    var arrayBuffer = request.response;
                    var contentDisposition = request.getResponseHeader('Content-Disposition');
                    var contentType = request.getResponseHeader('Content-Type');
                    if (contentDisposition) {
                        var filename = contentDisposition.split('filename=')[1];
                    }
                    var blob = new Blob([arrayBuffer], { type: contentType });
                    var url = URL.createObjectURL(blob);
                    var a = document.createElement('a');
                    document.body.appendChild(a);
                    a.style.display = 'none';
                    a.href = url;
                    if (filename) { a.download = filename; }
                    a.click();
                    URL.revokeObjectURL(url);
                    $.unblock();
                };
                request.onerror = function () {
                    $.unblock();
                    downloadFailed();
                };

                request.send();
            });
        });
    </script>
}
