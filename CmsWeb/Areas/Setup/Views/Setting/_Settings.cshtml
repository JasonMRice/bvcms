@using CmsWeb.Areas.Setup.Models
@model SettingListModel

<div class="table-responsive">
    <table id="settings" class="table table-striped">
        <thead>
            <tr>
                <th>
                    <a tabindex="0" href="#" data-toggle="popover" data-placement="bottom" data-trigger="focus" data-title="Setting Code" data-content="Please enter the setting name exactly as it appears in the help article."><i class="fa fa-info-circle"></i></a>&nbsp;
                    Setting
                </th>
                <th>
                    <a tabindex="0" href="#" data-toggle="popover" data-placement="bottom" data-trigger="focus" data-title="Setting Value" data-content="Click value to edit."><i class="fa fa-info-circle"></i></a>&nbsp;
                    Value
                </th>
                @if (Model.CanDelete)
                {
                    <th>Action</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.List)
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(item.DisplayName))
                        {
                            @item.DisplayName
                        }
                        else
                        {
                            @item.Setting.Id
                        }
                        @if (!string.IsNullOrEmpty(item.Description))
                        {
                            <a href="#" data-toggle="popover" data-placement="right" data-trigger="focus" data-title="Description" data-content="@(item.Description)"><i class="fa fa-info-circle"></i></a>
                        }
                    </td>
                    <td style="word-break: break-all;">
                        @switch (item.DataType)
                        {
                            case (int)SettingDataType.Boolean:
                                <input class="boolean-toggle" type="checkbox" id="@item.Setting.Id" name="@item.Setting.Id" data-toggle="toggle" data-on="True" data-off="False" data-width="100" checked="@(item.Setting.SettingX?.ToLower() == "true")" )>
                                break;
                            case (int)SettingDataType.Date:
                                <a class="edit-datetime" id="@item.Setting.Id" data-pk="@(item.Setting.Id)" data-type="date" data-url="/Setting/Edit">
                                    @(item.Setting.SettingX ?? "Empty")
                                </a>
                                break;
                            case (int)SettingDataType.Obscured:
                                <a id="@item.Setting.Id" class="clickEdit" data-pk="@(item.Setting.Id)" data-value="@item.Setting.SettingX">
                                    @if (item.Setting.SettingX == null)
                                    {
                                        @:Empty
                                    }
                                    else
                                    {
                                        @:•••••••••••••••
                                    }
                                </a>
                                break;
                            default:
                                <a id="@item.Setting.Id" class="clickEdit" data-pk="@(item.Setting.Id)">
                                    @(item.Setting.SettingX ?? "Empty")
                                </a>
                                break;
                        }
                    </td>
                    @if (Model.CanDelete)
                    {
                        <td>
                            <a id="d@(item.Setting.Id)" href="#" class="delete btn btn-sm btn-danger"><i class="fa fa-trash"></i> Delete</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>
