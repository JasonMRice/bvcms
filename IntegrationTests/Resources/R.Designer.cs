//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntegrationTests.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class R {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal R() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IntegrationTests.Resources.R", typeof(R).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;configuration&gt;
        ///    &lt;configSections&gt;
        ///        &lt;sectionGroup name=&quot;system.applicationHost&quot;&gt;
        ///            &lt;section name=&quot;applicationPools&quot; allowDefinition=&quot;AppHostOnly&quot; overrideModeDefault=&quot;Deny&quot; /&gt;
        ///            &lt;section name=&quot;configHistory&quot; allowDefinition=&quot;AppHostOnly&quot; overrideModeDefault=&quot;Deny&quot; /&gt;
        ///            &lt;section name=&quot;customMetadata&quot; allowDefinition=&quot;AppHostOnly&quot; overrideModeDefault=&quot;Deny&quot; /&gt;
        ///            &lt;section name=&quot;listenerAdapters&quot; allowDefinition=&quot;AppH [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string applicationhostconfig {
            get {
                return ResourceManager.GetString("applicationhostconfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to json = model.DynamicDataFromJson(model.Content(&apos;jsondata&apos;))
        ///meta = model.DynamicDataFromJson(&apos;&apos;&apos;{&apos;Id&apos;:&apos;readonly int&apos;,&apos;Name&apos;:&apos;str&apos;,&apos;City&apos;:&apos;str&apos;,&apos;Work&apos;:&apos;str&apos;}&apos;&apos;&apos;)
        ///form = &apos;&apos;&apos;&lt;form action=&apos;/PyScriptForm&apos; method=&apos;post&apos;&gt;
        ///    {}
        ///    &lt;input id=&apos;submitit&apos; type=&apos;submit&apos; value=&apos;Submit&apos; /&gt;
        ///    &lt;input type=&apos;hidden&apos; name=&apos;pyscript&apos; value=&apos;{}&apos; /&gt;
        ///    &lt;input type=&apos;hidden&apos; name=&apos;p1&apos; value=&apos;{}&apos; /&gt;
        ///    &lt;input type=&apos;hidden&apos; name=&apos;p2&apos; value=&apos;{}&apos; /&gt;
        ///&lt;/form&gt;
        ///&apos;&apos;&apos;
        ///
        ///def FindElement(array, id):
        ///    return next((i for i in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PyScriptFormTest {
            get {
                return ResourceManager.GetString("PyScriptFormTest", resourceCulture);
            }
        }
    }
}
